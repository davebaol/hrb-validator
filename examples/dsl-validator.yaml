def:
  - $VALIDATOR:
      and:
        - isType$: ['', object]
        - isLength$: ['', {min: 1, max: 1}]
        - xor:
          - matches$: [$var, ^\$.] # Validator variable name starts with $ followed by at least 1 char
          - $var: $LEAF_VALIDATOR
          - $var: $BRANCH_VALIDATOR

    $LEAF_VALIDATOR:
      every$:
        - ''
        - and:
          - isOneOf$: [key, {$var: validatorNames}]  # validator names are defined in the root scope and passed in by the code launching the validation
          - isType$: [value, array]
          - isLength$: [value, {min: 1}]
          - if:
            - matches: [key, '\$$']
            - call$: [value.0, {$var: $ARG_PATH}]
            - call$: [value.0, {$var: $ARG_ANY}]

    $BRANCH_VALIDATOR:
      xor:
        - call$: [alter, {$var: $ARG_TWO_ANY_AND_ONE_CHILD}]
        - call$: [and, {$var: $ARG_ZERO_OR_MORE_CHILDREN}]
        - call$: [call, {$var: $ARG_ANY_AND_ONE_CHILD}]
        - call$: [call$, {$var: $ARG_PATH_AND_ONE_CHILD}]
        - call$: [def, {$var: $ARG_SCOPE_AND_ONE_CHILD}]
        - call$: [every, {$var: $ARG_ANY_AND_ONE_CHILD}]
        - call$: [every$, {$var: $ARG_PATH_AND_ONE_CHILD}]
        - call$: [if, {$var: $ARG_TWO_OR_THREE_CHILDREN}]
        - call$: [not, {$var: $ARG_ONE_CHILD}]
        - call$: [optCall, {$var: $ARG_ANY_AND_ONE_CHILD}]
        - call$: [optCall$, {$var: $ARG_PATH_AND_ONE_CHILD}]
        - call$: [optEvery, {$var: $ARG_ANY_AND_ONE_CHILD}]
        - call$: [optEvery$, {$var: $ARG_PATH_AND_ONE_CHILD}]
        - call$: [optSome, {$var: $ARG_ANY_AND_ONE_CHILD}]
        - call$: [optSome$, {$var: $ARG_PATH_AND_ONE_CHILD}]
        - call$: [optWhile, {$var: $ARG_ANY_AND_TWO_CHILDREN}]
        - call$: [optWhile$, {$var: $ARG_PATH_AND_TWO_CHILDREN}]
        - call$: [or, {$var: $ARG_ZERO_OR_MORE_CHILDREN}]
        - call$: [some, {$var: $ARG_ANY_AND_ONE_CHILD}]
        - call$: [some$, {$var: $ARG_PATH_AND_ONE_CHILD}]
        - call$: [while, {$var: $ARG_ANY_AND_TWO_CHILDREN}]
        - call$: [while$, {$var: $ARG_PATH_AND_TWO_CHILDREN}]
        - call$: [xor, {$var: $ARG_ZERO_OR_MORE_CHILDREN}]

    $PATH:
      or:
        - isType$: ['', [string, number, 'null']]
        - isArrayOf$: ['', [string, number]]
    
    $ARG_REF:
      and:
        - isType$: ['', object]
        - isLength$: ['', {min: 1, max: 1}]
        - xor:
          - matches$: [$var, '^[^\$]']   # Non validator variable name cannot start with $
          - call$: [$path, {$var: $PATH}]

    $ARG_PATH:
      or:
        - $var: $ARG_REF
        - $var: $PATH

    $ARG_SCOPE:
      or:
        #- $var: $ARG_REF    # Does it make sense to reference a scope?
        - and:
          - isType$: ['', object]
          - every$:
            - ''
            - if:
              - matches$: [key, ^\$.]
              - call$: [value, {$var: $VALIDATOR}]

    $ARG_ANY:
      or:
        - $var: $ARG_REF
        - isType$: ['', any]

    $ARG_STRING:
      or:
        - $var: $ARG_REF
        - isType$: ['', string]

    $ARG_TWO_ANY_AND_ONE_CHILD:
      and:
        - isType$: ['', array]
        - call$: [0, {$var: $ARG_ANY}]
        - call$: [1, {$var: $ARG_ANY}]
        - call$: [2, {$var: $VALIDATOR}]

    $ARG_SCOPE_AND_ONE_CHILD:
      and:
        - isType$: ['', array]
        - isLength$: ['', {min: 2, max: 2}]
        - optCall$: [0, {$var: $ARG_SCOPE}]
        - call$: [1, {$var: $VALIDATOR}]

    $ARG_ANY_AND_ONE_CHILD:
      and:
        - isType$: ['', array]
        - isLength$: ['', {min: 2, max: 2}]
        - call$: [0, {$var: $ARG_ANY}]
        - call$: [1, {$var: $VALIDATOR}]

    $ARG_PATH_AND_ONE_CHILD:
      and:
        - isType$: ['', array]
        - isLength$: ['', {min: 2, max: 2}]
        - call$: [0, {$var: $ARG_PATH}]
        - call$: [1, {$var: $VALIDATOR}]
    
    $ARG_ANY_AND_TWO_CHILDREN:
      and:
        - isType$: ['', array]
        - isLength$: ['', {min: 3, max: 3}]
        - call$: [0, {$var: $ARG_ANY}]
        - call$: [1, {$var: $VALIDATOR}]
        - call$: [2, {$var: $VALIDATOR}]
    
    $ARG_PATH_AND_TWO_CHILDREN:
      and:
        - isType$: ['', array]
        - isLength$: ['', {min: 3, max: 3}]
        - call$: [0, {$var: $ARG_PATH}]
        - call$: [1, {$var: $VALIDATOR}]
        - call$: [2, {$var: $VALIDATOR}]

    $ARG_ZERO_OR_MORE_CHILDREN:
      and:
        - isType$: ['', array]
        - every$:
          - ''
          - call$: [value, {$var: $VALIDATOR}]
    
    $ARG_ONE_CHILD:
      and:
        - isType$: ['', array]
        - isLength$: ['', {min: 1, max: 1}]
        - call$: [0, {$var: $VALIDATOR}]
    
    $ARG_TWO_OR_THREE_CHILDREN:
      and:
        - isType$: ['', array]
        - isLength$: ['', {min: 2, max: 3}]
        - call$: [0, {$var: $VALIDATOR}]
        - call$: [1, {$var: $VALIDATOR}]
        - optCall$: [2, {$var: $VALIDATOR}]

  - $var: $VALIDATOR
